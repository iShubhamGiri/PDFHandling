// <copyright file="AutoItHelper.cs" company="Civica">
// Copyright Â© Civica. All Rights Reserved.
// </copyright>

using System;
using System.Threading;
using AutoIt;

namespace Smoke.E2ECentralFramework.Helpers
{
    /// <summary>
    /// AutoItHelper
    /// </summary>
    public class AutoItHelper
    {
        /// <summary>
        /// Save File using AutoIt to interact with the Windows dialog form
        /// </summary>
        /// <param name="fileForInputControl">txtfile</param>
        /// <param name="windowHandleName">window Handle Name</param>
        /// <param name="buttonControlName">button Control Name</param>
        /// <param name="textControlName">text Control Name</param>
        /// <param name="timeoutInSeconds">timeout In Seconds. If left as null it will set to timeout value from app.config</param>
        /// <returns>message</returns>
        public static string SaveAsFile(string fileForInputControl, string windowHandleName = "Save As", string buttonControlName = "&Save", string textControlName = "Edit1", double? timeoutInSeconds = null)
        {
            timeoutInSeconds = timeoutInSeconds == null ? 10 : timeoutInSeconds.Value;

            string failureMessage = null;

            failureMessage = SaveAsWindow(windowHandleName, textControlName, fileForInputControl, buttonControlName, Convert.ToInt32(timeoutInSeconds.Value));

            // Attempt to close regardless of whether window exists (this won't fail if window does not exist)
            // This ensures that the window is not left hanging after the browser is closed if the test fails. This CAN happen!
            AutoItX.WinClose(windowHandleName);
            Console.WriteLine("AutoIt: Attempt to close File Upload window (in case it is still open) regardless of success");

            return failureMessage;
        }


        private static string SaveAsWindow(string windowHandleName, string textControlName, string textForInputControl, string buttonControlName, int timeout)
        {
            string failureMessage = null;
            var hasTimedOut = AutoItX.WinWait(windowHandleName, string.Empty, timeout) > 0 ? false : true;
            if (!hasTimedOut)
            {
                Console.WriteLine("AutoIt: Found File Upload dialog window");

                AutoItX.ControlFocus(windowHandleName, string.Empty, textControlName);
                Console.WriteLine("AutoIt: Focused on File Upload window's input text box");

                // Keep the window active when using the Send function.
                AutoItX.ControlSetText(windowHandleName, string.Empty, textControlName, string.Empty);
                AutoItX.ControlSend(windowHandleName, string.Empty, textControlName, textForInputControl);

                AutoItX.ControlFocus(windowHandleName, string.Empty, textControlName);
                AutoItX.ControlSetText(windowHandleName, string.Empty, textControlName, string.Empty);

                AutoItX.ControlFocus(windowHandleName, string.Empty, textControlName);
                AutoItX.ControlSetText(windowHandleName, string.Empty, textControlName, textForInputControl);
                Console.WriteLine("AutoIt: Set file path in File Upload window's input text box");

                // Check text is entered in to control
                var verifyTextForInputControl = AutoItX.ControlGetText(windowHandleName, string.Empty, textControlName);
                if (verifyTextForInputControl != textForInputControl)
                {
                    failureMessage = $"AutoIt: Failure to send text {textForInputControl} to input control";
                }
                else
                {
                    Console.WriteLine("AutoIt: File path set correctly in File Upload window's input text box");

                    // Click button to action event and close the control
                    AutoItX.ControlClick(windowHandleName, string.Empty, buttonControlName);
                    Console.WriteLine("AutoIt: Click Open button in File Upload window's input text box");

                    // check window is now closed
                    hasTimedOut = AutoItX.WinWaitClose(windowHandleName, string.Empty, timeout) > 0 ? false : true;
                    if (hasTimedOut)
                    {
                        failureMessage = $"AutoIt: Timed out after {timeout} seconds waiting for File upload window to close";
                    }
                    else
                    {
                        Console.WriteLine("AutoIt: File Upload window has been closed");
                    }
                }
            }
            else
            {
                failureMessage = $"AutoIt: Timed out after {timeout} seconds waiting for File upload window to appear";
            }

            return failureMessage;
        }
    }
}
